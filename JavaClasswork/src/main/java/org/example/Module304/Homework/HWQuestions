-- Homework 1
-- Question 0.1
-- I want to see the count of the number of products in each product line
SELECT pl.product_line, COUNT(p.id) AS NumberOfProducts
FROM products p
JOIN productlines pl ON p.productline_id = pl.id
GROUP BY pl.product_line;

-- question 0.2
-- I want to see a list of employees and all of the customers for that employee.   Employee name will be duplicated in the result set.   I want to see the employee first and last name
-- and the customer contact first and last name as well as the customer name
SELECT
    e.firstname AS Employee_FirstName,
    e.lastname AS Employee_LastName,
    c.contact_firstname AS Customer_ContactFirstName,
    c.contact_lastname AS Customer_ContactLastName,
    c.customer_name AS Customer_Name
FROM employees e
JOIN customers c ON e.id = c.sales_rep_employee_id
ORDER BY e.firstname, e.lastname, c.customer_name;

-- question 0.3
-- I want to see a list of employees in each office.   Show the office name and the employee name
SELECT
    o.city AS OfficeName,
    CONCAT(e.firstname, ' ', e.lastname) AS EmployeeName
FROM offices o
JOIN employees e ON o.id = e.office_id
ORDER BY o.city, e.lastname, e.firstname;

-- question 0.4
-- I want to see the totaly number of each employee type based on job title.. result should the job title and the number of employess with that job title.
SELECT job_title, COUNT(*) AS NumberOfEmployees
FROM employees
GROUP BY job_title;

-- question 0.5
-- I want to see a list of all payments each customer has made.  Order the list by custoemr name ascending, then by the payment amount descending
SELECT
    c.customer_name,
    p.amount AS PaymentAmount,
    p.payment_date
FROM customers c
JOIN payments p ON c.id = p.customer_id
ORDER BY c.customer_name ASC, p.amount DESC;

-- question 0.6
-- I want to see a list of products that have never been sold.   use ... not in ( select product_id from order_details ) in your where clause
-- select * from products where id not in ( select product_id from orderdetails );
SELECT *
FROM products
WHERE id NOT IN (SELECT product_id FROM orderdetails);

-- question 0.7
-- are there any customers that have never made an order
SELECT *
FROM customers
WHERE id NOT IN (SELECT customer_id FROM orders);

-- Question 1
-- How many customer are handled by each office.  I want to see the office name and the count of the number of customers in that office.
SELECT
    o.city AS OfficeName,
    COUNT(*) AS NumberOfCustomers
FROM offices o
JOIN employees e ON o.id = e.office_id
JOIN customers c ON e.id = c.sales_rep_employee_id
GROUP BY o.city;

-- Question 2
-- I want to see the products with the most margin at the top of the table.  Include the product name, buy price, msrp, and margin in the results.  Margin is calculated (MSPR - buy_price)
SELECT
    product_name,
    buy_price,
    msrp,
    (msrp - buy_price) AS margin
FROM products
ORDER BY margin DESC;

-- Question 2.5
-- I want to see the top 5 customers in each state based on margin

-- Question 3
--  I want to see the top 5 salesmen in the company based on the total amount sold
SELECT
    e.firstname,
    e.lastname,
    SUM(p.amount) AS TotalSold
FROM employees e
JOIN customers c ON e.id = c.sales_rep_employee_id
JOIN payments p ON c.id = p.customer_id
GROUP BY e.id
ORDER BY TotalSold DESC
LIMIT 5;

-- Question 4
-- I want to see the top 5 salesmen based on overall profit (margin)
SELECT
    e.firstname,
    e.lastname,
    SUM(p.amount) AS TotalSold
FROM employees e
JOIN customers c ON e.id = c.sales_rep_employee_id
JOIN payments p ON c.id = p.customer_id
GROUP BY e.id
ORDER BY TotalSold DESC
LIMIT 5;

-- Question 5
-- I want to see all of the orders that happened in 2004.   You can use a function called year(order_date) = 2004
SELECT *
FROM orders
WHERE YEAR(order_date) = 2004;

-- Question 6
-- I want to see the total amount of all orders grouped by the year
SELECT
    YEAR(order_date) AS OrderYear,
    SUM(od.price_each * od.quantity_ordered) AS TotalAmount
FROM orders
JOIN orderdetails od ON orders.id = od.order_id
GROUP BY OrderYear;

-- Question 7
-- I want to see the top 5 products based on quantity sold across all orders
SELECT
    p.product_name,
    SUM(od.quantity_ordered) AS TotalQuantitySold
FROM products p
JOIN orderdetails od ON p.id = od.product_id
GROUP BY p.id, p.product_name
ORDER BY TotalQuantitySold DESC
LIMIT 5;

-- question 7.5
-- how many times has each product appeared in an order reguardless of how many were purchased.
SELECT
    p.product_name,
    COUNT(*) AS TimesOrdered
FROM products p
JOIN orderdetails od ON p.id = od.product_id
GROUP BY p.id, p.product_name
ORDER BY TimesOrdered DESC;

-- question 7.6
-- how many products would be out of stock baed on the amount sold acrosss tiem.  -- not sure if the data will spoort this .. basically
-- looking for any product where the sum of the quantity sold is greater than the quantity in stock
SELECT
    p.product_name,
    p.quantity_in_stock,
    SUM(od.quantity_ordered) AS TotalQuantitySold
FROM products p
JOIN orderdetails od ON p.id = od.product_id
GROUP BY p.id, p.product_name, p.quantity_in_stock
HAVING SUM(od.quantity_ordered) > p.quantity_in_stock;

-- question 7.9
-- I want to see the distinct order status ordered alphabetically
SELECT DISTINCT status
FROM orders
ORDER BY status;
SELECT
    p.product_name,
    SUM(od.quantity_ordered) AS TotalQuantity
FROM products p
JOIN orderdetails od ON p.id = od.product_id
GROUP BY p.id
ORDER BY TotalQuantity DESC
LIMIT 5;

-- Question 8
-- I want to see the office name and the distinct product lines that have been sold in that office.  This will require joining almost all of the tables.
-- select distinct o.name as office_name, pl.productlines as product_line_name  ....
SELECT DISTINCT
    o.city AS OfficeName,
    pl.product_line
FROM offices o
JOIN employees e ON o.id = e.office_id
JOIN customers c ON e.id = c.sales_rep_employee_id
JOIN orders ord ON c.id = ord.customer_id
JOIN orderdetails od ON ord.id = od.order_id
JOIN products p ON od.product_id = p.id
JOIN productlines pl ON p.productline_id = pl.id
ORDER BY o.city, pl.product_line;
